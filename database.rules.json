{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth != null && (auth.uid == $uid || !data.hasChildren(['email', 'password', 'tokens']))",
        ".write": "auth != null && auth.uid == $uid",
        "name": {
          ".read": true,
          ".validate": "newData.isString()"
        },
        "phone": {
          ".read": true,
          ".validate": "newData.isString()"
        },
        "profilePicture": {
          ".read": true,
          ".validate": "newData.isString()"
        },
        "college": {
          ".read": true,
          ".validate": "newData.isString()"
        },
        "email": {
          ".read": "auth.uid == $uid",
          ".validate": "newData.isString()"
        },
        "password": {
          ".read": false,
          ".write": false
        },
        "tokens": {
          ".read": "auth.uid == $uid"
        }
      }
    },
    "trips": {
      ".read": "auth != null",
      ".indexOn": ["creatorCollege", "creatorId"],
      "$tripId": {
        ".write": "auth != null",
        "requests": {
          ".read": "auth != null && (auth.uid === data.child('userId').val() || auth.uid === data.parent().child('creatorId').val())",
          ".write": "auth != null && (auth.uid === data.child('userId').val() || auth.uid === data.parent().child('creatorId').val())",
          "$requestId": {
            ".validate": "newData.hasChildren(['userId', 'userName', 'userEmail', 'status', 'requestedAt'])",
            ".write": "auth != null",
            "status": {
              ".validate": "newData.isString() && (newData.val() === 'pending' || newData.val() === 'approved' || newData.val() === 'rejected')"
            },
            "userId": {
              ".validate": "newData.isString()"
            }
          }
        }
      }
    },
    "trips": {
      ".read": "auth != null",
      ".indexOn": ["creatorCollege", "creatorId"],
      "$tripId": {
        ".write": "auth != null && (!data.exists() || data.child('creatorId').val() === auth.uid)",
        "messages": {
          ".read": "auth != null && (
            root.child('trips').child($tripId).child('creatorId').val() === auth.uid ||
            root.child('trips').child($tripId).child('passengers').child(auth.uid).exists() ||
            root.child('trips').child($tripId).child('requests').child(auth.uid).child('status').val() === 'approved'
          )",
          ".indexOn": ["timestamp"],
          "$messageId": {
            ".read": "auth != null",
            ".write": "auth != null && (
              (!data.exists() && newData.child('userId').val() === auth.uid) ||
              (data.exists() && data.child('userId').val() === auth.uid)
            )",
            ".validate": "newData.hasChildren(['text', 'userId', 'userName', 'timestamp'])",
            "text": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 1000"
            },
            "userId": {
              ".validate": "newData.val() === auth.uid"
            },
            "userName": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "userPhotoURL": {
              ".validate": "newData.val() === null || newData.isString()"
            },
            "timestamp": {
              ".validate": "newData.val() === now || newData.isNumber()"
            }
          }
        },
        "requests": {
          ".read": "auth != null && (
            root.child('trips').child($tripId).child('creatorId').val() === auth.uid ||
            data.child('userId').val() === auth.uid
          )",
          ".write": "auth != null && (
            root.child('trips').child($tripId).child('creatorId').val() === auth.uid ||
            (newData.hasChildren() && newData.child('userId').val() === auth.uid)
          )"
  }
}
